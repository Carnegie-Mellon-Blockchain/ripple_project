import { CardSchema } from './cards';
import { GeneralSchema } from './general';
import { NodeSchema } from './node';
import { SecuritySchema } from './security';
export interface Blank {
    [key: string]: undefined;
}
declare const v1: typeof import("../../v1/api").Types;
export declare class MountedUserSchema {
    mounted: boolean;
    profile: typeof v1.ProfileSchema | Blank;
    node: NodeSchema;
    nodes: NodeSchema[];
    security: SecuritySchema | Blank;
    general: GeneralSchema | Blank;
    preference: typeof v1.PreferenceSchema;
    cards: CardSchema[];
    apps: (typeof v1.AppSchema)[];
    contacts: (typeof v1.ContactSchema)[];
    vault: typeof v1.VaultSchema | Blank;
    log: undefined;
}
export type UserSchema = MountedUserSchema;
export {};
