{"rollup":[{"output":[{"exports":["default","modules","typings","vanilla"],"facadeModuleId":"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/index.d.ts","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/api.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/env.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/events.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/mount.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/session.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/async.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/sync.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/default/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/embark/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/index.d.ts"],"name":"index.d","type":"chunk","dynamicImports":[],"fileName":"index.d.ts","implicitlyLoadedBefore":[],"importedBindings":{"@crossmarkio/typings/build/src/schema/v4/apps":["*"],"events":["default"],"@crossmarkio/typings/sdk":["*"],"@crossmarkio/typings/build/src/schema/v4":["*"]},"imports":["@crossmarkio/typings/build/src/schema/v4/apps","events","@crossmarkio/typings/sdk","@crossmarkio/typings/build/src/schema/v4"],"modules":{"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/api.d.ts":{"code":"interface ActiveRequest {\n    resolve: (value: unknown) => void;\n    reject: (value: unknown) => void;\n}\ndeclare class Api extends EventEmitter {\n    #private;\n    sdk: Sdk;\n    active: Map<string, ActiveRequest>;\n    uuid: string;\n    connected: boolean;\n    target: string | undefined;\n    timestamp: number | undefined;\n    constructor(sdk: Sdk);\n    awaitRequest: (request: Partial<typings.Models.Request>) => Promise<typings.Models.FullResponse>;\n    request: (request: Partial<typings.Models.Request>) => string;\n}","originalLength":647,"removedExports":[],"renderedExports":["ActiveRequest","Api"],"renderedLength":520},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/env.d.ts":{"code":"declare class Env {\n    isAndroid: boolean;\n    isIos: boolean;\n    isOpera: boolean;\n    isWindows: boolean;\n    isSSR: boolean;\n    isXApp: boolean;\n    isMobile: boolean;\n    isDesktop: boolean;\n    constructor();\n}","originalLength":280,"removedExports":["default"],"renderedExports":["Env"],"renderedLength":218},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/events.d.ts":{"code":"declare interface CustomEmitter {\n    on(event: typeof typings.EVENTS.PING, listener: () => void): this;\n    on(event: typeof typings.EVENTS.CLOSE, listener: () => void): this;\n    on(event: typeof typings.EVENTS.OPEN, listener: () => void): this;\n    on(event: typeof typings.EVENTS.SIGNOUT, listener: () => void): this;\n    on(event: typeof typings.EVENTS.USER_CHANGE, listener: (user: typeof typings.BasicUser) => void): this;\n    on(event: typeof typings.EVENTS.NETWORK_CHANGE, listener: (network: typeof typings.BasicNetwork) => void): this;\n    on(event: typeof typings.EVENTS.RESPONSE, listener: (resp: typings.Models.Response) => void): this;\n    on(event: typeof typings.EVENTS.ALL, listener: (all: typeof typings.CatchAllEvent) => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class CustomEmitter extends EventEmitter {\n}","originalLength":1128,"removedExports":["CustomEvents"],"renderedExports":["CustomEmitter"],"renderedLength":857},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/mount.d.ts":{"code":"declare interface Mount {\n    on(event: 'detected', listener: () => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class Mount extends EventEmitter {\n    isDetected?: boolean;\n    sdk: Sdk;\n    constructor(sdk: Sdk);\n    loop: (timeout?: number) => Promise<boolean>;\n}","originalLength":370,"removedExports":[],"renderedExports":["Mount"],"renderedLength":293},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/session.d.ts":{"code":"declare const enum State {\n    active = \"active\",\n    unactive = \"unactive\",\n    error = \"error\"\n}\ndeclare class Session {\n    sdk: Sdk;\n    user?: typeof typings.BasicUser;\n    network?: typeof typings.BasicNetwork;\n    address?: string;\n    isOpen: boolean;\n    lastPing?: number;\n    state: State;\n    responses: Map<string, typings.Models.FullResponse>;\n    constructor(sdk: Sdk);\n    handleDetect: () => Promise<void>;\n    handlePing: () => number;\n    handleClose: () => boolean;\n    handleOpen: () => boolean;\n    handleSignOut: () => void;\n    handleNetworkChange: (network: {\n        network: typeof typings.BasicNetwork;\n    }) => void;\n    handleUserChange: (user: {\n        user: typeof typings.BasicUser;\n    }) => void;\n    handleResponse: (resp: typings.Models.FullResponse) => void;\n}","originalLength":892,"removedExports":[],"renderedExports":["State","Session"],"renderedLength":800},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/async.d.ts":{"code":"declare class Async {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signInAndWait: (hex?: string) => Promise<typeof typings.Models.SignInFullResponse>;\n    signAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignFullResponse>;\n    submitAndWait: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SubmitFullResponse>;\n    signAndSubmitAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignAndSubmitFullResponse>;\n    bulkSignAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignFullResponse>;\n    bulkSubmitAndWait: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSubmitFullResponse>;\n    bulkSignAndSubmitAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignAndSubmitFullResponse>;\n    encryptAndWait: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.EncryptFullResponse>;\n    };\n    decryptAndAwait: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.DecryptFullResponse>;\n    };\n    isLockedAndWait: () => Promise<typeof typings.Models.IsLockedFullResponse>;\n    versionAndWait: () => Promise<typeof typings.Models.VersionFullResponse>;\n    verifyAndWait: (hex: string) => Promise<typeof typings.Models.VerifyFullResponse>;\n    connect: (timeout?: number) => Promise<boolean>;\n    detect: (timeout?: number) => Promise<boolean>;\n}","originalLength":2102,"removedExports":[],"renderedExports":["Async"],"renderedLength":1949},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/sync.d.ts":{"code":"declare class Sync {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signIn: (hex?: string) => string;\n    sign: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    submit: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    signAndSubmit: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSign: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSubmit: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    encrypt: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    decrypt: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    bulkSignAndSubmit: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    getResponse: (id: string) => typings.Models.FullResponse | undefined;\n    isConnected: () => boolean | undefined;\n    isInstalled: () => boolean | undefined;\n    isLocked: () => string;\n    isOpen: () => boolean;\n    version: () => string;\n    verify: (hex: string) => string;\n    getAddress: () => string | undefined;\n    getNetwork: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicNetwork | undefined;\n    getUser: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicUser | undefined;\n}","originalLength":1797,"removedExports":[],"renderedExports":["Sync"],"renderedLength":1630},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/index.d.ts":{"code":"interface Opts {\n    project: typeof typings.Config.config.title;\n}\ndeclare class Sdk extends CustomEmitter {\n    mount: Mount;\n    api: Api;\n    session: Session;\n    env: Env;\n    async: Async;\n    sync: Sync;\n    methods: Async & Sync;\n    app: _crossmarkio_typings_build_src_schema_v4_apps.Apps.titles;\n    constructor(opts?: Opts);\n}","originalLength":565,"removedExports":[],"renderedExports":["Opts","Sdk"],"renderedLength":338},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/default/index.d.ts":{"code":"declare const _default$2: Sdk;","originalLength":88,"removedExports":[],"renderedExports":["default"],"renderedLength":30},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/embark/index.d.ts":{"code":"declare const _default$1: Sdk;","originalLength":88,"removedExports":[],"renderedExports":["default"],"renderedLength":30},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/index.d.ts":{"code":"","originalLength":92,"removedExports":[],"renderedExports":[],"renderedLength":0},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/index.d.ts":{"code":"declare const _default: Sdk;","originalLength":225,"removedExports":[],"renderedExports":["vanilla","modules","typings","default"],"renderedLength":28}},"referencedFiles":[],"code":"import * as _crossmarkio_typings_build_src_schema_v4_apps from '@crossmarkio/typings/build/src/schema/v4/apps';\nimport EventEmitter from 'events';\nimport * as typings from '@crossmarkio/typings/sdk';\nexport { typings };\nimport * as _crossmarkio_typings_build_src_schema_v4 from '@crossmarkio/typings/build/src/schema/v4';\n\ninterface ActiveRequest {\n    resolve: (value: unknown) => void;\n    reject: (value: unknown) => void;\n}\ndeclare class Api extends EventEmitter {\n    #private;\n    sdk: Sdk;\n    active: Map<string, ActiveRequest>;\n    uuid: string;\n    connected: boolean;\n    target: string | undefined;\n    timestamp: number | undefined;\n    constructor(sdk: Sdk);\n    awaitRequest: (request: Partial<typings.Models.Request>) => Promise<typings.Models.FullResponse>;\n    request: (request: Partial<typings.Models.Request>) => string;\n}\n\ndeclare class Env {\n    isAndroid: boolean;\n    isIos: boolean;\n    isOpera: boolean;\n    isWindows: boolean;\n    isSSR: boolean;\n    isXApp: boolean;\n    isMobile: boolean;\n    isDesktop: boolean;\n    constructor();\n}\n\ndeclare interface CustomEmitter {\n    on(event: typeof typings.EVENTS.PING, listener: () => void): this;\n    on(event: typeof typings.EVENTS.CLOSE, listener: () => void): this;\n    on(event: typeof typings.EVENTS.OPEN, listener: () => void): this;\n    on(event: typeof typings.EVENTS.SIGNOUT, listener: () => void): this;\n    on(event: typeof typings.EVENTS.USER_CHANGE, listener: (user: typeof typings.BasicUser) => void): this;\n    on(event: typeof typings.EVENTS.NETWORK_CHANGE, listener: (network: typeof typings.BasicNetwork) => void): this;\n    on(event: typeof typings.EVENTS.RESPONSE, listener: (resp: typings.Models.Response) => void): this;\n    on(event: typeof typings.EVENTS.ALL, listener: (all: typeof typings.CatchAllEvent) => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class CustomEmitter extends EventEmitter {\n}\n\ndeclare interface Mount {\n    on(event: 'detected', listener: () => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class Mount extends EventEmitter {\n    isDetected?: boolean;\n    sdk: Sdk;\n    constructor(sdk: Sdk);\n    loop: (timeout?: number) => Promise<boolean>;\n}\n\ndeclare const enum State {\n    active = \"active\",\n    unactive = \"unactive\",\n    error = \"error\"\n}\ndeclare class Session {\n    sdk: Sdk;\n    user?: typeof typings.BasicUser;\n    network?: typeof typings.BasicNetwork;\n    address?: string;\n    isOpen: boolean;\n    lastPing?: number;\n    state: State;\n    responses: Map<string, typings.Models.FullResponse>;\n    constructor(sdk: Sdk);\n    handleDetect: () => Promise<void>;\n    handlePing: () => number;\n    handleClose: () => boolean;\n    handleOpen: () => boolean;\n    handleSignOut: () => void;\n    handleNetworkChange: (network: {\n        network: typeof typings.BasicNetwork;\n    }) => void;\n    handleUserChange: (user: {\n        user: typeof typings.BasicUser;\n    }) => void;\n    handleResponse: (resp: typings.Models.FullResponse) => void;\n}\n\ndeclare class Async {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signInAndWait: (hex?: string) => Promise<typeof typings.Models.SignInFullResponse>;\n    signAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignFullResponse>;\n    submitAndWait: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SubmitFullResponse>;\n    signAndSubmitAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignAndSubmitFullResponse>;\n    bulkSignAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignFullResponse>;\n    bulkSubmitAndWait: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSubmitFullResponse>;\n    bulkSignAndSubmitAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignAndSubmitFullResponse>;\n    encryptAndWait: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.EncryptFullResponse>;\n    };\n    decryptAndAwait: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.DecryptFullResponse>;\n    };\n    isLockedAndWait: () => Promise<typeof typings.Models.IsLockedFullResponse>;\n    versionAndWait: () => Promise<typeof typings.Models.VersionFullResponse>;\n    verifyAndWait: (hex: string) => Promise<typeof typings.Models.VerifyFullResponse>;\n    connect: (timeout?: number) => Promise<boolean>;\n    detect: (timeout?: number) => Promise<boolean>;\n}\n\ndeclare class Sync {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signIn: (hex?: string) => string;\n    sign: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    submit: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    signAndSubmit: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSign: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSubmit: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    encrypt: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    decrypt: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    bulkSignAndSubmit: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    getResponse: (id: string) => typings.Models.FullResponse | undefined;\n    isConnected: () => boolean | undefined;\n    isInstalled: () => boolean | undefined;\n    isLocked: () => string;\n    isOpen: () => boolean;\n    version: () => string;\n    verify: (hex: string) => string;\n    getAddress: () => string | undefined;\n    getNetwork: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicNetwork | undefined;\n    getUser: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicUser | undefined;\n}\n\ninterface Opts {\n    project: typeof typings.Config.config.title;\n}\ndeclare class Sdk extends CustomEmitter {\n    mount: Mount;\n    api: Api;\n    session: Session;\n    env: Env;\n    async: Async;\n    sync: Sync;\n    methods: Async & Sync;\n    app: _crossmarkio_typings_build_src_schema_v4_apps.Apps.titles;\n    constructor(opts?: Opts);\n}\n\ndeclare const _default$2: Sdk;\n\ndeclare const _default$1: Sdk;\n\ndeclare namespace index_d {\n  export { _default$1 as embark, _default$2 as xmark };\n}\n\ndeclare const _default: Sdk;\n\nexport { _default as default, index_d as modules, Sdk as vanilla };\n","map":null,"preliminaryFileName":"index.d.ts","sourcemapFileName":null}]},{"output":[{"exports":["default","modules","typings","vanilla"],"facadeModuleId":"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/index.d.ts","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/api.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/env.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/events.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/mount.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/session.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/async.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/sync.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/default/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/embark/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/index.d.ts","/home/runner/work/core/core/packages/libs/sdk/build/typings/src/index.d.ts"],"name":"index.d","type":"chunk","dynamicImports":[],"fileName":"index.d.ts","implicitlyLoadedBefore":[],"importedBindings":{"@crossmarkio/typings/build/src/schema/v4/apps":["*"],"events":["default"],"@crossmarkio/typings/sdk":["*"],"@crossmarkio/typings/build/src/schema/v4":["*"]},"imports":["@crossmarkio/typings/build/src/schema/v4/apps","events","@crossmarkio/typings/sdk","@crossmarkio/typings/build/src/schema/v4"],"modules":{"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/api.d.ts":{"code":"interface ActiveRequest {\n    resolve: (value: unknown) => void;\n    reject: (value: unknown) => void;\n}\ndeclare class Api extends EventEmitter {\n    #private;\n    sdk: Sdk;\n    active: Map<string, ActiveRequest>;\n    uuid: string;\n    connected: boolean;\n    target: string | undefined;\n    timestamp: number | undefined;\n    constructor(sdk: Sdk);\n    awaitRequest: (request: Partial<typings.Models.Request>) => Promise<typings.Models.FullResponse>;\n    request: (request: Partial<typings.Models.Request>) => string;\n}","originalLength":647,"removedExports":[],"renderedExports":["ActiveRequest","Api"],"renderedLength":520},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/env.d.ts":{"code":"declare class Env {\n    isAndroid: boolean;\n    isIos: boolean;\n    isOpera: boolean;\n    isWindows: boolean;\n    isSSR: boolean;\n    isXApp: boolean;\n    isMobile: boolean;\n    isDesktop: boolean;\n    constructor();\n}","originalLength":280,"removedExports":["default"],"renderedExports":["Env"],"renderedLength":218},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/events.d.ts":{"code":"declare interface CustomEmitter {\n    on(event: typeof typings.EVENTS.PING, listener: () => void): this;\n    on(event: typeof typings.EVENTS.CLOSE, listener: () => void): this;\n    on(event: typeof typings.EVENTS.OPEN, listener: () => void): this;\n    on(event: typeof typings.EVENTS.SIGNOUT, listener: () => void): this;\n    on(event: typeof typings.EVENTS.USER_CHANGE, listener: (user: typeof typings.BasicUser) => void): this;\n    on(event: typeof typings.EVENTS.NETWORK_CHANGE, listener: (network: typeof typings.BasicNetwork) => void): this;\n    on(event: typeof typings.EVENTS.RESPONSE, listener: (resp: typings.Models.Response) => void): this;\n    on(event: typeof typings.EVENTS.ALL, listener: (all: typeof typings.CatchAllEvent) => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class CustomEmitter extends EventEmitter {\n}","originalLength":1128,"removedExports":["CustomEvents"],"renderedExports":["CustomEmitter"],"renderedLength":857},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/mount.d.ts":{"code":"declare interface Mount {\n    on(event: 'detected', listener: () => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class Mount extends EventEmitter {\n    isDetected?: boolean;\n    sdk: Sdk;\n    constructor(sdk: Sdk);\n    loop: (timeout?: number) => Promise<boolean>;\n}","originalLength":370,"removedExports":[],"renderedExports":["Mount"],"renderedLength":293},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/services/session.d.ts":{"code":"declare const enum State {\n    active = \"active\",\n    unactive = \"unactive\",\n    error = \"error\"\n}\ndeclare class Session {\n    sdk: Sdk;\n    user?: typeof typings.BasicUser;\n    network?: typeof typings.BasicNetwork;\n    address?: string;\n    isOpen: boolean;\n    lastPing?: number;\n    state: State;\n    responses: Map<string, typings.Models.FullResponse>;\n    constructor(sdk: Sdk);\n    handleDetect: () => Promise<void>;\n    handlePing: () => number;\n    handleClose: () => boolean;\n    handleOpen: () => boolean;\n    handleSignOut: () => void;\n    handleNetworkChange: (network: {\n        network: typeof typings.BasicNetwork;\n    }) => void;\n    handleUserChange: (user: {\n        user: typeof typings.BasicUser;\n    }) => void;\n    handleResponse: (resp: typings.Models.FullResponse) => void;\n}","originalLength":892,"removedExports":[],"renderedExports":["State","Session"],"renderedLength":800},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/async.d.ts":{"code":"declare class Async {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signInAndWait: (hex?: string) => Promise<typeof typings.Models.SignInFullResponse>;\n    signAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignFullResponse>;\n    submitAndWait: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SubmitFullResponse>;\n    signAndSubmitAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignAndSubmitFullResponse>;\n    bulkSignAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignFullResponse>;\n    bulkSubmitAndWait: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSubmitFullResponse>;\n    bulkSignAndSubmitAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignAndSubmitFullResponse>;\n    encryptAndWait: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.EncryptFullResponse>;\n    };\n    decryptAndAwait: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.DecryptFullResponse>;\n    };\n    isLockedAndWait: () => Promise<typeof typings.Models.IsLockedFullResponse>;\n    versionAndWait: () => Promise<typeof typings.Models.VersionFullResponse>;\n    verifyAndWait: (hex: string) => Promise<typeof typings.Models.VerifyFullResponse>;\n    connect: (timeout?: number) => Promise<boolean>;\n    detect: (timeout?: number) => Promise<boolean>;\n}","originalLength":2102,"removedExports":[],"renderedExports":["Async"],"renderedLength":1949},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/methods/sync.d.ts":{"code":"declare class Sync {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signIn: (hex?: string) => string;\n    sign: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    submit: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    signAndSubmit: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSign: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSubmit: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    encrypt: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    decrypt: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    bulkSignAndSubmit: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    getResponse: (id: string) => typings.Models.FullResponse | undefined;\n    isConnected: () => boolean | undefined;\n    isInstalled: () => boolean | undefined;\n    isLocked: () => string;\n    isOpen: () => boolean;\n    version: () => string;\n    verify: (hex: string) => string;\n    getAddress: () => string | undefined;\n    getNetwork: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicNetwork | undefined;\n    getUser: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicUser | undefined;\n}","originalLength":1797,"removedExports":[],"renderedExports":["Sync"],"renderedLength":1630},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/core/index.d.ts":{"code":"interface Opts {\n    project: typeof typings.Config.config.title;\n}\ndeclare class Sdk extends CustomEmitter {\n    mount: Mount;\n    api: Api;\n    session: Session;\n    env: Env;\n    async: Async;\n    sync: Sync;\n    methods: Async & Sync;\n    app: _crossmarkio_typings_build_src_schema_v4_apps.Apps.titles;\n    constructor(opts?: Opts);\n}","originalLength":565,"removedExports":[],"renderedExports":["Opts","Sdk"],"renderedLength":338},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/default/index.d.ts":{"code":"declare const _default$2: Sdk;","originalLength":88,"removedExports":[],"renderedExports":["default"],"renderedLength":30},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/embark/index.d.ts":{"code":"declare const _default$1: Sdk;","originalLength":88,"removedExports":[],"renderedExports":["default"],"renderedLength":30},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/modules/index.d.ts":{"code":"","originalLength":92,"removedExports":[],"renderedExports":[],"renderedLength":0},"/home/runner/work/core/core/packages/libs/sdk/build/typings/src/index.d.ts":{"code":"declare const _default: Sdk;","originalLength":225,"removedExports":[],"renderedExports":["vanilla","modules","typings","default"],"renderedLength":28}},"referencedFiles":[],"code":"import * as _crossmarkio_typings_build_src_schema_v4_apps from '@crossmarkio/typings/build/src/schema/v4/apps';\nimport EventEmitter from 'events';\nimport * as typings from '@crossmarkio/typings/sdk';\nexport { typings };\nimport * as _crossmarkio_typings_build_src_schema_v4 from '@crossmarkio/typings/build/src/schema/v4';\n\ninterface ActiveRequest {\n    resolve: (value: unknown) => void;\n    reject: (value: unknown) => void;\n}\ndeclare class Api extends EventEmitter {\n    #private;\n    sdk: Sdk;\n    active: Map<string, ActiveRequest>;\n    uuid: string;\n    connected: boolean;\n    target: string | undefined;\n    timestamp: number | undefined;\n    constructor(sdk: Sdk);\n    awaitRequest: (request: Partial<typings.Models.Request>) => Promise<typings.Models.FullResponse>;\n    request: (request: Partial<typings.Models.Request>) => string;\n}\n\ndeclare class Env {\n    isAndroid: boolean;\n    isIos: boolean;\n    isOpera: boolean;\n    isWindows: boolean;\n    isSSR: boolean;\n    isXApp: boolean;\n    isMobile: boolean;\n    isDesktop: boolean;\n    constructor();\n}\n\ndeclare interface CustomEmitter {\n    on(event: typeof typings.EVENTS.PING, listener: () => void): this;\n    on(event: typeof typings.EVENTS.CLOSE, listener: () => void): this;\n    on(event: typeof typings.EVENTS.OPEN, listener: () => void): this;\n    on(event: typeof typings.EVENTS.SIGNOUT, listener: () => void): this;\n    on(event: typeof typings.EVENTS.USER_CHANGE, listener: (user: typeof typings.BasicUser) => void): this;\n    on(event: typeof typings.EVENTS.NETWORK_CHANGE, listener: (network: typeof typings.BasicNetwork) => void): this;\n    on(event: typeof typings.EVENTS.RESPONSE, listener: (resp: typings.Models.Response) => void): this;\n    on(event: typeof typings.EVENTS.ALL, listener: (all: typeof typings.CatchAllEvent) => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class CustomEmitter extends EventEmitter {\n}\n\ndeclare interface Mount {\n    on(event: 'detected', listener: () => void): this;\n    on(event: string, listener: Function): this;\n}\ndeclare class Mount extends EventEmitter {\n    isDetected?: boolean;\n    sdk: Sdk;\n    constructor(sdk: Sdk);\n    loop: (timeout?: number) => Promise<boolean>;\n}\n\ndeclare const enum State {\n    active = \"active\",\n    unactive = \"unactive\",\n    error = \"error\"\n}\ndeclare class Session {\n    sdk: Sdk;\n    user?: typeof typings.BasicUser;\n    network?: typeof typings.BasicNetwork;\n    address?: string;\n    isOpen: boolean;\n    lastPing?: number;\n    state: State;\n    responses: Map<string, typings.Models.FullResponse>;\n    constructor(sdk: Sdk);\n    handleDetect: () => Promise<void>;\n    handlePing: () => number;\n    handleClose: () => boolean;\n    handleOpen: () => boolean;\n    handleSignOut: () => void;\n    handleNetworkChange: (network: {\n        network: typeof typings.BasicNetwork;\n    }) => void;\n    handleUserChange: (user: {\n        user: typeof typings.BasicUser;\n    }) => void;\n    handleResponse: (resp: typings.Models.FullResponse) => void;\n}\n\ndeclare class Async {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signInAndWait: (hex?: string) => Promise<typeof typings.Models.SignInFullResponse>;\n    signAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignFullResponse>;\n    submitAndWait: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SubmitFullResponse>;\n    signAndSubmitAndWait: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.SignAndSubmitFullResponse>;\n    bulkSignAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignFullResponse>;\n    bulkSubmitAndWait: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSubmitFullResponse>;\n    bulkSignAndSubmitAndWait: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => Promise<typeof typings.Models.BulkSignAndSubmitFullResponse>;\n    encryptAndWait: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.EncryptFullResponse>;\n    };\n    decryptAndAwait: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => Promise<typeof typings.Models.DecryptFullResponse>;\n    };\n    isLockedAndWait: () => Promise<typeof typings.Models.IsLockedFullResponse>;\n    versionAndWait: () => Promise<typeof typings.Models.VersionFullResponse>;\n    verifyAndWait: (hex: string) => Promise<typeof typings.Models.VerifyFullResponse>;\n    connect: (timeout?: number) => Promise<boolean>;\n    detect: (timeout?: number) => Promise<boolean>;\n}\n\ndeclare class Sync {\n    sdk: Sdk;\n    api: Api;\n    session: Session;\n    mount: Mount;\n    constructor(sdk: Sdk);\n    signIn: (hex?: string) => string;\n    sign: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    submit: (address: string, txblob: string, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    signAndSubmit: (tx: typeof typings.Models.AllTransactionRequest, opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSign: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    bulkSubmit: (address: string, txblobs: string[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    encrypt: {\n        aes: (address: string, data: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    decrypt: {\n        aes: (address: string, hex: string, opts?: typeof typings.Models.CryptOpts) => string;\n    };\n    bulkSignAndSubmit: (txns: (typeof typings.Models.IndexedTransactionRequest)[], opts?: typeof typings.Models.ExtendedSignOpts) => string;\n    getResponse: (id: string) => typings.Models.FullResponse | undefined;\n    isConnected: () => boolean | undefined;\n    isInstalled: () => boolean | undefined;\n    isLocked: () => string;\n    isOpen: () => boolean;\n    version: () => string;\n    verify: (hex: string) => string;\n    getAddress: () => string | undefined;\n    getNetwork: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicNetwork | undefined;\n    getUser: () => _crossmarkio_typings_build_src_schema_v4.Types.BasicUser | undefined;\n}\n\ninterface Opts {\n    project: typeof typings.Config.config.title;\n}\ndeclare class Sdk extends CustomEmitter {\n    mount: Mount;\n    api: Api;\n    session: Session;\n    env: Env;\n    async: Async;\n    sync: Sync;\n    methods: Async & Sync;\n    app: _crossmarkio_typings_build_src_schema_v4_apps.Apps.titles;\n    constructor(opts?: Opts);\n}\n\ndeclare const _default$2: Sdk;\n\ndeclare const _default$1: Sdk;\n\ndeclare namespace index_d {\n  export { _default$1 as embark, _default$2 as xmark };\n}\n\ndeclare const _default: Sdk;\n\nexport { _default as default, index_d as modules, Sdk as vanilla };\n","map":null,"preliminaryFileName":"index.d.ts","sourcemapFileName":null}]}],"wepack":[{"name":"umd","startTime":1720442254562,"endTime":1720442262515,"hash":"740387ae1dc04629762d"},{"name":"cjs","startTime":1720442254579,"endTime":1720442262512,"hash":"8707da8bf949c42b3495"}]}